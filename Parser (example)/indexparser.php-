<?php

header("Content-Type: text/html; charset=utf-8");

ini_set('display_errors','On');
error_reporting(E_ALL);
setlocale(LC_ALL, 'ru_RU.utf8');


$m = memory_get_peak_usage(); 
$time_start = microtime_float();


$conf = array(
    'host' => 'u306294.mysql.masterhost.ru', 
    'user' => 'u306294_svs23', 
    'password' => 'p3OgRolY-e4_iD', 
    'db' => 'u306294_svs23'
);

$DBH = connectPDO($conf);

require('phpQuery/phpQuery.php');

$hostname = 'https://cs-online.su';


$state = file_get_contents("px_state.txt");



if ($state == 'ended'){
    if (date ("d", filemtime("px_state.txt")) != date("d", time())  ) {
        echo '--- Начало положено --- ';
        file_put_contents ("px_state.txt" , 'dload');
    }
}


if ($state == 'dload'){

    echo '--- Основная загрузка параметров --- ';

    $page = loadPage($hostname);
    $document = phpQuery::newDocument($page);
    try {
        $menu = getDOMChild('.sidebar-menu.hidden-xs .sidebar-menu__box .sidebar-menu__list li.sidebar-menu__item_menu' , $document);
    } catch (Error $e) {
        echo "ФАТАЛ ЭРОР: " . $e->getMessage() . "\n";
    }

    $menuList = getMenuArr($menu);
    $countElArr = count($menuList);
    unset($menuList[0]);	//Ванны
    unset($menuList[6]);	//Душевая
    unset($menuList[12]);	//Мебель
    unset($menuList[23]);	//Раковины
    unset($menuList[36]);	//Унитазы
    unset($menuList[45]);	//Биде
   // unset($menuList[48]);	//Писсуары
    unset($menuList[49]);	//Аксессуары
    unset($menuList[65]);	//Инсталляции
    unset($menuList[73]);	//Сифоны
    unset($menuList[82]);	//Смесители	
    unset($menuList[93]); 	//Полотенцесушители
    unset($menuList[96]);	//Душевые трапы
    unset($menuList[101]);	//Комплектующие
   // unset($menuList[108]);	//Средства ухода
  //  unset($menuList[109]);	//Распродажа


    $step = file_get_contents("px_step.txt");
   // file_put_contents ("px_step.txt" , 0); //заглушка
   // echo $step.'<br>';

    if ($step >=  $countElArr) {
       	file_put_contents ("px_step.txt" , 0);
    	file_put_contents ("px_state.txt" , 'getimg');
        echo '<h1>КОНЕЦ</h1>';
    }else{
        echo 'ШАГ - >' . $step;
        echo '<br>';

     //   pre($menuList);

        $goods = getProdsOnPage($menuList[$step]); // 0 - 12 
 
        echo '<b>';
        //echo 'Текущий раздел - ' . $menuList[$step];
        echo 'ВСЕГО ТОВАРОВ - ' . count($goods);
        echo '</b>';
        //pre($goods);
        getParents($goods , $DBH );
        saveGoods($goods , $DBH );
        
       	$step++;
       	file_put_contents ("px_step.txt" , $step);
        
    }
}elseif ($state == 'getimg'){
    if (getImageAndDescription($DBH)) {
        echo '--- Изображения, описания и артикулы получены --- ';
        file_put_contents ("px_state.txt" , 'insertToBase');
    } else echo '--- Получение изображений, описаний и артикулов --- ';
}elseif ($state == 'insertToBase'){
    echo '--- Добавление в базу --- ';
    insertToBase($DBH);
}




//echo $state.'<br>';



//поправила


function insertToBase ($DBH) {
    $STH = $DBH->prepare("SELECT * FROM modx_a_px_goods WHERE state = 0 ORDER BY id ASC LIMIT 300"); //LEAVE 
    $STHUpd = $DBH->prepare("UPDATE  modx_a_px_goods SET state = 1 WHERE id = :id"); //LEAVE LIMIT
    $STH->execute(); 
    if($STH->rowCount() > 0)  {
        while($row = $STH->fetch()) { 
            $good = unserialize($row['good']);
           // pre($good);
            //$good['params']['Тип'] = $row['filter_type_value'];
            $productID = processedProduct($DBH , $good  , $row['image'] , $row['description'] );
           // $filtersIDs = processedFilter($DBH , $good['params'] , $productID);
            $STHUpd->execute(array('id' => $row['id'])); 
        }
    }else {
        file_put_contents ("px_state.txt" , 'ended');
    }
}


function processedProduct($DBH, $good , $image , $description){

	$STH = $DBH->prepare("SELECT contentid FROM modx_site_tmplvar_contentvalues WHERE `value` = :sku LIMIT 1");
    
    $STH->execute(array(
        'sku'=> $good['articul']
    )); 

 /*   $STH = $DBH->prepare("SELECT id FROM modx_site_content WHERE `alias` LIKE '%:sku%' LIMIT 1");
    
    $STH->execute(array(
        'sku'=> $good['href']
    )); 
*/

    if($STH->rowCount() == 1 )  {

        if ($row = $STH->fetch()) { 
            echo 'updating';

            $productId = $row['id'];

           // echo $productId.'<br>';

            try {
                $DBH->beginTransaction();
                $DBH->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
                $DBH->setAttribute(PDO::ATTR_EMULATE_PREPARES, false);

                $STH_sc = $DBH->prepare("UPDATE modx_site_content SET  
                    pagetitle = :pagetitle ,
                    parent = :parent,
                    content = :content,
                    createdon =  '".time()."'
                    WHERE id = ".$productId." LIMIT 1 "
                );  

               // echo $description;
               echo  $good['name'];
                $STH_sc->execute(array(
                    'pagetitle'=> $good['name'],
                    'content'=> $description,
                    'parent'=> $good['catsID'], //закомментить если категорию менять не нужно
                )); 
     
                $DBH->commit(); 

            }catch(PDOExecption $e) { 
                $DBH->rollback(); 
                print "Error!: " . $e->getMessage() . "</br>"; 
                exit("Exiting");
            }

        }
    }else {
        echo 'inserting';

        try { 
            $DBH->beginTransaction();
            $DBH->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            $DBH->setAttribute(PDO::ATTR_EMULATE_PREPARES, false);

            $STH_sc = $DBH->prepare("INSERT INTO modx_site_content ( 
                pagetitle ,  
                alias ,  
                published, 
                parent,
                isfolder,
                template,
                content,
                createdon
                ) 
                values (
                :pagetitle ,  
                :alias ,  
                1, 
                :parent,
                0,
                1, 
                :content,
                '".time()."'
                )" 
            );  

         //   echo 'Описание - '.$description;

          echo 'наименование - '. $good['name'];

            $STH_sc->execute(array(
                'pagetitle'=> $good['name'],
                'alias'=> getAlias($DBH, $good['name']),
                'content'=> $description,
                'parent'=> $good['catsID'],
            )); 
            $productId = $DBH->lastInsertId();

            $DBH->commit(); 

        }catch(PDOExecption $e) { 
            $DBH->rollback(); 
            print "Error!: " . $e->getMessage() . "</br>"; 
            exit("Exiting");
        }
    }


    $STH_tv = $DBH->prepare("INSERT INTO modx_site_tmplvar_contentvalues ( 
        tmplvarid , 
        contentid,
        value
        )
        values (
        :tmplvarid,
        :contentid,
        :value
        )
        ON DUPLICATE KEY UPDATE value = :valueu " , 
        array(PDO::MYSQL_ATTR_USE_BUFFERED_QUERY => true)
    );

  //  echo 'добавляем цену - '.$good['price'].'<br>';

    $STH_tv->execute(array(
        'tmplvarid'=> 18, // цена
        'contentid'=> $productId,
        'value'=> $good['price'],
        'valueu'=> $good['price']
    )); 

    $STH_tv->execute(array(
        'tmplvarid'=> 6, // картинка
        'contentid'=> $productId,
        'value'=> 'parser/'.$image,
        'valueu'=> 'parser/'.$image
    )); 


    return $productId;

}



function getImageAndDescription($DBH) {
    $STH = $DBH->prepare("SELECT * FROM modx_a_px_goods WHERE image is null AND description is null AND articul is null ORDER BY id ASC LIMIT 50");
    $STH->setFetchMode(PDO::FETCH_ASSOC);  
    $STHupd = $DBH->prepare("UPDATE modx_a_px_goods SET image = :image , description = :description, articul = :articul WHERE id = :id LIMIT 1");
    
    $STHdel = $DBH->prepare("DELETE FROM  modx_a_px_goods  WHERE id = :id LIMIT 1");
    $STH->execute(); 
    if($STH->rowCount() > 0)  {
        
        /*$row = $STH->fetch();
        print_r($row);*/
        //print(count($row));
        
        while($row = $STH->fetch()) { 
           $row['good'] = unserialize($row['good']);
           // print 'Путь - '.$row['good']['href'];
           // 
           print  $imgAndDescr['articul'].'<br>';
            if ($imgAndDescr = loadImageAndDescription ($row['good']['href'] )) {
                try { 
                    $DBH->beginTransaction();
                    $DBH->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
                    $DBH->setAttribute(PDO::ATTR_EMULATE_PREPARES, false);
                    $STHupd->execute(array (
                        'image' => $imgAndDescr['image'],
                        'description' => ($imgAndDescr['description'] ? $imgAndDescr['description']: '-'),
                        'articul' => $imgAndDescr['articul'],
                        'id' => $row['id']
                        )); 
                    $DBH->commit(); 
                } catch(PDOExecption $e) { 
                    $DBH->rollback(); 
                    print "Error!: " . $e->getMessage() . "</br>"; 
                    exit("Exiting");
                }
            }else {
                 $STHdel->execute(array (
                        'id' => $row['id']
                )); 
            }           
        }
        
        return false;
    }else {
        return true;
    }
}




function loadImageAndDescription ($url) {
    
    global $hostname;

    $result = array();

    $page = loadPage($hostname.$url);
   // print 'страница-'.$page;
    $document = phpQuery::newDocument($page);
    $container = getDOMChild('.card' , $document);
	//print 'контейнер'.$container;

    if (count($image = pq($container['.card-gallery a.card-gallery__image_main'])) > 0) {
        $linkToImg = $image->attr('href');
        $ext = @end (explode('.' , $linkToImg));
        $result['image'] = curl_loadImage($linkToImg, $ext);
    }

    if (count(($description = pq($container['#description']))) > 0) {
        $description->find('h2')->remove();
        $description->find('a')->remove();
        $result['description'] = trim($description->text());
        $result['description'] = ($result['description'] ? $result['description'] : '-');
    }

    if (count(($articul = pq($container['.card-info ul.row li:last-child']))) > 0) {
    	$result['articul'] = trim($articul->text());
		$result['articul'] = str_replace("Артикул:", "", $result['articul']);
    }

   // print_r($result);

    return $result;
    
}



function saveGoods($goods,$DBH) { 
    pre($goods);
    $STH = $DBH->prepare("INSERT INTO modx_a_px_goods ( 
        good , 
        `timestamp`
        )
        values (
        :good,
        :timestampp
        )
        ON DUPLICATE KEY UPDATE good = :goodd , `timestamp` = :timestamppp" , 
        array(PDO::MYSQL_ATTR_USE_BUFFERED_QUERY => true)
    ); 

    try { 
        $DBH->beginTransaction();
        $DBH->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        $DBH->setAttribute(PDO::ATTR_EMULATE_PREPARES, false);

        foreach ($goods as $key => $value) {

        	//print serialize($value); 
        	$STH->execute(array(
	            'good' => serialize($value),
                'goodd' => serialize($value),
                'timestampp' => time(),
                'timestamppp' => time()
	        ));

        	/*
            $data = array( 
                'good' => serialize($value),
                'goodd' => serialize($value),
                'timestampp' => time(),
                'timestamppp' => time()
            );
            $STH->execute($data);
            */
        }
        $DBH->commit();
       
    } catch(PDOExecption $e) { 
        $DBH->rollback(); 
        print "Error!: " . $e->getMessage() . "</br>"; 
        exit("Exiting");
    }
    return true;


}


function insertCat($name,$DBH) {

     $STH_sc = $DBH->prepare("INSERT INTO modx_site_content ( 
        pagetitle ,  
        alias ,  
        published, 
        parent,
        isfolder,
        template
        ) 
        values (
        :pagetitle ,  
        :alias ,  
        1, 
        2830,
        1,
        1
        )"
    );  

    try { 
        $DBH->beginTransaction();
        $DBH->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        $DBH->setAttribute(PDO::ATTR_EMULATE_PREPARES, false);

        $STH_sc->execute(array(
            'pagetitle' => $name, 
            'alias' => getAlias($DBH, $name),
        ));
        $catId = $DBH->lastInsertId();

    } catch(PDOExecption $e) { 
        $DBH->rollback(); 
        print "Error!: " . $e->getMessage() . "</br>"; 
        exit("Exiting");
    } 

    if (is_numeric($catId)) {
        $DBH->commit(); 
        return $catId;
    }else {
        $DBH->rollback(); 
        return false;
    }

}

function  getAlias($DBH , $txt){

    $trans = array("а"=>"a", "б"=>"b", "в"=>"v", "г"=>"g", "д"=>"d", "е"=>"e",
        "ё"=>"jo", "ж"=>"zh", "з"=>"z", "и"=>"i", "й"=>"jj", "к"=>"k", "л"=>"l",
        "м"=>"m", "н"=>"n", "о"=>"o", "п"=>"p", "р"=>"r", "с"=>"s", "т"=>"t", "у"=>"u",
        "ф"=>"f", "х"=>"kh", "ц"=>"c", "ч"=>"ch", "ш"=>"sh", "щ"=>"shh", "ы"=>"y",
        "э"=>"eh", "ю"=>"yu", "я"=>"ya", "А"=>"a", "Б"=>"b", "В"=>"v", "Г"=>"g",
        "Д"=>"d", "Е"=>"e", "Ё"=>"jo", "Ж"=>"zh", "З"=>"z", "И"=>"i", "Й"=>"jj",
        "К"=>"k", "Л"=>"l", "М"=>"m", "Н"=>"n", "О"=>"o", "П"=>"p", "Р"=>"r", "С"=>"s",
        "Т"=>"t", "У"=>"u", "Ф"=>"f", "Х"=>"kh", "Ц"=>"c", "Ч"=>"ch", "Ш"=>"sh",
        "Щ"=>"shh", "Ы"=>"y", "Э"=>"eh", "Ю"=>"yu", "Я"=>"ya", " "=>"-", "."=>"-",
        ","=>"-", "_"=>"-", "+"=>"-", ":"=>"-", ";"=>"-", "!"=>"-", "?"=>"-");
        
    $alias= addslashes($txt);
    $alias= strip_tags(strtr($alias, $trans));
    $alias= preg_replace("/[^a-zA-Z0-9-]/", '', $alias);
    $alias= preg_replace('/([-]){2,}/', '-', $alias);
    $alias= trim($alias, '-');
    
    if(strlen($alias) > 20) $alias= trim(substr($alias, 0, 20), '-');
    
    $STH = $DBH->prepare("SELECT id FROM modx_site_content WHERE alias = :alias LIMIT 1"); //только здесь
    $STH->setFetchMode(PDO::FETCH_ASSOC);  

    do{
        $STH->execute(array('alias' => $alias )); 
        if($STH->rowCount() == 1) $alias .= rand(1, 9);
    }while(($STH->rowCount() == 1));
    if( ! $STH) $alias= false;
    return $alias;
}

function getParents(&$goods,$DBH) {
    $STH = $DBH->prepare("SELECT id FROM modx_site_content WHERE parent = 2830 AND isfolder = 1 AND pagetitle LIKE :name LIMIT 1");
    $STH->setFetchMode(PDO::FETCH_ASSOC);  
    
    if (is_array($goods) && count($goods)) {
        foreach ($goods as $key => $value) {
            
            $STH->execute(array('name' => $value['cats'] )); //словил тут ошибку
            if($STH->rowCount() == 1)  {
                if($row = $STH->fetch()) { 
                    $goods[$key]["catsID"] = $row['id'];
                }
            }else {
                $goods[$key]["catsID"] = insertCat($value['cats'],$DBH); //и тут
            }
        }
    }
}



function getProdsOnPage($data) {
    global $hostname;
    
    $linkListPaginate = array();
    $goods = array();
    $i = 0;
  //  $data['href'] = '/catalog/?section_id=1789&arrFilter_P1_MIN=&arrFilter_P1_MAX=&arrFilter_89_3525926430=Y&arrFilter_43_MIN=&arrFilter_43_MAX=&arrFilter_31_MIN=&arrFilter_31_MAX=&arrFilter_32_MIN=&arrFilter_32_MAX=&arrFilter_34_MIN=&arrFilter_34_MAX=&arrFilter_191_2072341393=Y&set_filter=Показать%20&section_id=2481';
    $page = loadPage($hostname.$data['href']);
    $document = phpQuery::newDocument($page);
    $pagination = getDOMChild('.pagination' , $document);
    $countPage =count($paginationLnk = pq($pagination['li']));
    $lastPageIDX = ($countPage == 1 ? $countPage : $countPage-1 ) ;
  
    if (is_numeric($lastPageIDX)) {
        while ($i++ < $lastPageIDX) {
            $linkListPaginate[] = $data['href'].'&PAGEN_2='.$i;
        }

    }

    //print_r($linkListPaginate);
    if (is_array($linkListPaginate) && count($linkListPaginate) > 0 ) {
        $itrAll = 0;
        foreach ($linkListPaginate as $key => $value) {
            $page = loadPage($hostname.$value);
            $document = phpQuery::newDocument($page);
            $elems = getDOMChild('li .card-list__item-box' , $document);
            if (count( pq($elems)) > 0) {
                foreach ($elems as $keyG => $valueG) {                    
                    //$goods[$itrAll]['articul'] = 'a'.pq($valueG)->find('.cl_art span')->text();
                    $goods[$itrAll]['price'] = preg_replace('/[^0-9]/', '', pq($valueG)->find('.card-list__item-price')->text());
                    $goods[$itrAll]['name'] = pq($valueG)->find('.card-list__item-link h6.card-list__item-title')->text();
                    $goods[$itrAll]['cats'] = $data['name'];
                    $goods[$itrAll]['href'] = pq($valueG)->find('a.card-list__item-link')->attr("href");
                    //$goods[$itrAll]['vendor'] = getVendorAndState(($goodsProps = pq($valueG)->find('.cl_char')) , 'производитель');
                    //$goods[$itrAll]['state'] = getVendorAndState($goodsProps , 'наличие');              
                    //$goods[$itrAll++]['params'] = getProps($goodsProps);
                     
                   $itrAll++;  
                    //$goods[$keyPage]['name'] = pq($linkToPage)->text();
                }
            }   
        }
    }
    
   
    return $goods;
}




function getMenuArr($menu) {
    if ( ! $menu instanceof phpQueryObject) return false;
    $categories = array();
    if (count(($elem = $menu['a'])) > 0) {
        //убираю основные категории, т.к. в них те же товары, что и в добавочных
       $excludedElems = array ('/catalog/1/?set_filter=y&arrFilter_191_2372017821=Y§ion_id=1' , 
                                '/catalog/?section_id=17&set_filter=y&arrFilter_191_528703603=Y§ion_id=116', 
                                '/catalog/26/?section_id=26&arrFilter_P1_MIN=&arrFilter_P1_MAX=&arrFilter_43_MIN=&arrFilter_43_MAX=&arrFilter_31_MIN=&arrFilter_31_MAX=&arrFilter_32_MIN=&arrFilter_32_MAX=&arrFilter_191_1894949109=Y&set_filter=%D0%9F%D0%BE%D0%BA%D0%B0%D0%B7%D0%B0%D1%82%D1%8C§ion_id=26',
                                '/catalog/?set_filter=y&arrFilter_191_167560777=Y§ion_id=10',
                                '/catalog/?set_filter=y&arrFilter_191_1826149032=Y§ion_id=1759',
                                '/catalog/?set_filter=y&arrFilter_191_3325683278=Y§ion_id=1756',
                                '/catalog/?set_filter=y&arrFilter_191_2072341393=Y§ion_id=1789',
                                '/catalog/?set_filter=y&arrFilter_191_2263918514=Y§ion_id=133',
                                '/catalog/?set_filter=y&arrFilter_191_3112899538=Y§ion_id=148',
                                '/catalog/?set_filter=y&arrFilter_191_3715281882=Y§ion_id=17',
                                '/catalog/2063/?section_id=2063&arrFilter_P1_MIN=&arrFilter_P1_MAX=&arrFilter_43_MIN=&arrFilter_43_MAX=&arrFilter_31_MIN=&arrFilter_31_MAX=&arrFilter_191_1306245870=Y&set_filter=%D0%9F%D0%BE%D0%BA%D0%B0%D0%B7%D0%B0%D1%82%D1%8C§ion_id=2063',
                                '/catalog/?set_filter=y&arrFilter_191_242264313=Y§ion_id=1775',
                                '/catalog/?set_filter=y&arrFilter_191_1005677066=Y§ion_id=1776',
                                '/catalog/?arrFilter_P1_MIN=&arrFilter_P1_MAX=&arrFilter_43_MIN=&arrFilter_43_MAX=&arrFilter_31_MIN=&arrFilter_31_MAX=&arrFilter_32_MIN=&arrFilter_32_MAX=&arrFilter_34_MIN=&arrFilter_34_MAX=&arrFilter_191_3701631459=Y&set_filter=%D0%9F%D0%BE%D0%BA%D0%B0%D0%B7%D0%B0%D1%82%D1%8C§ion_id=2767',
                                '/catalog/?arrFilter_P1_MIN=&arrFilter_P1_MAX=&arrFilter_43_MIN=&arrFilter_43_MAX=&arrFilter_31_MIN=&arrFilter_31_MAX=&arrFilter_32_MIN=&arrFilter_32_MAX=&arrFilter_34_MIN=&arrFilter_34_MAX=&arrFilter_219_3075670074=Y&set_filter=%D0%9F%D0%BE%D0%BA%D0%B0%D0%B7%D0%B0%D1%82%D1%8C§ion_id=2211'
                            );
        $i = 0;
        foreach ($elem as $keyPage => $linkToPage) {
            $href = pq($linkToPage)->attr('href');
           //print 'путь - '.$href;
            if ( in_array ( $href , $excludedElems )) continue; 
            $categories[$i]['href'] = $href;
            $categories[$i++]['name'] = pq($linkToPage)->text();
        }
    }
    return $categories;
}





// не правила

function curl_loadImage($link, $extension , $path = false) {
    global $hostname;

    $confpath = 'assets/images/parser/';
    $confpathShort = 'assets/images/parser/';
    $config = array(
        'localPath' => $confpath
    );

    $localImgName = md5($link).'.'.mb_strtolower($extension , "UTF-8");
    $dir = substr($localImgName , 0 , 2).'/';
       
    if (!file_exists($config['localPath'].$dir)) { 
        @mkdir($config['localPath'].$dir , 0777, 1);
    }

    $localPath = $config['localPath'].$dir.$localImgName;

    if (!file_exists($localPath)) { 
        $ch = curl_init($hostname.$link);
        $fp = fopen($localPath, "w");
        curl_setopt($ch, CURLOPT_FILE, $fp);
        curl_setopt($ch, CURLOPT_HEADER, 0);
        curl_setopt($ch, CURLOPT_COOKIEJAR, "cookie.txt"); 
        curl_setopt($ch, CURLOPT_COOKIEFILE, "cookie.txt"); 
        curl_setopt ($ch, CURLOPT_SSL_VERIFYPEER, 0); 
        curl_setopt ($ch, CURLOPT_SSL_VERIFYHOST, 0);
        curl_exec($ch);
        curl_close($ch);
        fclose($fp);
    }

    return $confpathShort.$dir.$localImgName;
}

function microtime_float(){
    list($usec, $sec) = explode(" ", microtime());
    return ((float)$usec + (float)$sec);
}

function pre( $hentry) {

    if (!is_array($hentry)) return false;
    echo "<pre>";
    print_r($hentry);
    echo "</pre>";
}


function connectPDO($conf) {
    $DBH = false; 
    try {  
      $DBH = new PDO("mysql:host=$conf[host];dbname=$conf[db];charset=UTF8", $conf['user'], $conf['password'], array(PDO::MYSQL_ATTR_INIT_COMMAND => 'SET NAMES \'UTF8\''));  

    }  
    catch(PDOException $e) {  
        echo $e->getMessage();  
    }
    return $DBH; 
}

function loadPage($link) {
    $curl = curl_init($link); 
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); 
    curl_setopt($curl, CURLOPT_COOKIEJAR, "cookie.txt"); 
    curl_setopt($curl, CURLOPT_COOKIEFILE, "cookie.txt"); 
    curl_setopt ($curl, CURLOPT_SSL_VERIFYPEER, 0); 
    curl_setopt ($curl, CURLOPT_SSL_VERIFYHOST, 0);
    curl_setopt ($curl, CURLOPT_CONNECTTIMEOUT, 0);
    curl_setopt ($curl, CURLOPT_TIMEOUT, 9999);
 
    $page = curl_exec($curl);
    return $page;
}

function getDOMChild($selector, $document ) {
    $hentry = $document->find($selector); 
    if ($hentry instanceof phpQueryObject) 
        return $hentry;
}




echo 'yep';